type Drink {
  name: String!             # a beer
  mixture: [Portion]        # 1 beer
  instructions: String!     # serve in a litre stein
}

type Portion {
  category: Category!     # beer (this is a category)
  flavor: String?         # N/A
  amount: String!         # 1 can
  default: Ingredient!    # brands facet? # suggested options?
}

type Category {
  category: Category?         # null       / beer
  name: String!               # beer       / porter
}

type Ingredient {
  categories: [Category] # beer       beer
  name: String!          # blue moon  guiness
  flavor: String?        # orange     null
}

type Stock {
  ingredient: Ingredient! # beer
  stock: Int!             # 10
  measure: String!        # bottles
}

type Rating {
  ingredient: Ingredient! # blue moon
  rating: Int!            # 2.75 / 0-5
}

type Order {
  user: User!
  status: String! # enum (in progress,canceled,complete...)
  drink: Drink! # have overrides as a field?
  ingredients: [Ingredient]!
  user_instructions: String?
  completed: Bool!
}

type User {
  id: ID!
  name: String!
  orders: [Order]
}

type Query {
  user: User
  drinks: [Drink!]
}
